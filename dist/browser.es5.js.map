{"version":3,"file":"browser.es5.js","sources":["../src/emitter.js","../src/server.js","../src/event-storage.js","../src/browser.js","../src/index.js"],"sourcesContent":["/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Context} from 'fusion-core';\n\nimport type {IEmitter} from './types.js';\n\nconst globalEventType = '*';\nexport default class UniversalEmitter implements IEmitter {\n  handlers: any;\n  mappers: any;\n\n  constructor() {\n    this.handlers = {};\n    this.mappers = {};\n  }\n  map(...args: *): * {\n    const {type, callback} = getArgs(args);\n    if (!this.mappers[type]) this.mappers[type] = [];\n    this.mappers[type].push(callback);\n  }\n  on(...args: *): * {\n    const {type, callback} = getArgs(args);\n    if (!this.handlers[type]) this.handlers[type] = [];\n    this.handlers[type].push(callback);\n  }\n  off(...args: *): * {\n    const {type, callback} = getArgs(args);\n    const index = this.handlers[type].indexOf(callback);\n    if (index > -1) this.handlers[type].splice(index, 1);\n  }\n  mapEvent(type: mixed, payload: mixed, ctx?: Context): mixed {\n    const globalMappers = this.mappers[globalEventType] || [];\n    const mappers = (this.mappers[type] || []).concat(globalMappers);\n    return mappers.reduce((payload, mapper) => {\n      return mapper(payload, ctx, type);\n    }, payload);\n  }\n  handleEvent(type: mixed, payload: mixed, ctx?: Context): void {\n    const globalHandlers = this.handlers[globalEventType] || [];\n    const handlers = (this.handlers[type] || []).concat(globalHandlers);\n    handlers.forEach(handler => handler(payload, ctx, type));\n  }\n\n  /* eslint-disable-next-line  no-unused-vars */\n  from(ctx: Context) {\n    throw new Error('Not implemented.');\n  }\n  /* eslint-disable-next-line  no-unused-vars */\n  emit(type: mixed, payload: mixed, ctx?: Context) {\n    // throw new Error('Not implemented.');\n  }\n  /* eslint-disable-next-line  no-unused-vars */\n  setFrequency(frequency: number) {\n    throw new Error('Not implemented.');\n  }\n  teardown() {\n    throw new Error('Not implemented.');\n  }\n  flush() {\n    throw new Error('Not implemented.');\n  }\n}\n\nfunction validateHandler(handler) {\n  if (typeof handler !== 'function')\n    throw new TypeError('handler must be a function');\n}\n\nfunction getArgs(args) {\n  const type = typeof args[0] === 'string' ? args[0] : globalEventType;\n  const callback = args[1] || args[0];\n  validateHandler(callback);\n  return {type, callback};\n}\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/* eslint-env node */\nimport {memoize, createPlugin} from 'fusion-core';\nimport type {FusionPlugin, Context} from 'fusion-core';\n\nimport Emitter from './emitter.js';\nimport type {\n  IEmitter,\n  UniversalEventsPluginDepsType as DepsType,\n} from './types.js';\n\nexport class GlobalEmitter extends Emitter {\n  from: any;\n  ctx: any;\n\n  constructor() {\n    super();\n    this.from = memoize(ctx => {\n      return new ScopedEmitter(ctx, this);\n    });\n  }\n  emit(type: mixed, payload: mixed, ctx?: Context): void {\n    payload = super.mapEvent(type, payload, this.ctx);\n    super.handleEvent(type, payload, ctx);\n  }\n  // mirror browser api\n  setFrequency() {}\n  teardown() {}\n}\n\nclass ScopedEmitter extends Emitter {\n  ctx: any;\n  parent: any;\n  batch: any;\n  flushed: any;\n\n  constructor(ctx, parent) {\n    super();\n    this.ctx = ctx;\n    this.parent = parent;\n    this.batch = [];\n    this.flushed = false;\n  }\n  emit(type, payload) {\n    // this logic exists to manage ensuring we send events after the batch\n    if (this.flushed) {\n      this.handleBatchedEvent({type, payload});\n    } else {\n      this.batch.push({type, payload});\n    }\n  }\n  handleBatchedEvent({type, payload}) {\n    payload = super.mapEvent(type, payload, this.ctx);\n    payload = this.parent.mapEvent(type, payload, this.ctx);\n    super.handleEvent(type, payload, this.ctx);\n    this.parent.handleEvent(type, payload, this.ctx);\n  }\n  flush() {\n    for (let index = 0; index < this.batch.length; index++) {\n      this.handleBatchedEvent(this.batch[index]);\n    }\n    this.batch = [];\n    this.flushed = true;\n  }\n  // mirror browser api\n  setFrequency() {}\n  teardown() {}\n}\n\nconst plugin =\n  __NODE__ &&\n  createPlugin({\n    provides: () => new GlobalEmitter(),\n    middleware: (deps, globalEmitter) => {\n      const bodyParser = require('koa-bodyparser');\n      const parseBody = bodyParser();\n      return async function universalEventsMiddleware(ctx, next) {\n        const emitter = globalEmitter.from(ctx);\n        if (ctx.method === 'POST' && ctx.path === '/_events') {\n          await parseBody(ctx, async () => {});\n          // $FlowFixMe\n          const {items} = ctx.request.body;\n          if (items) {\n            for (let index = 0; index < items.length; index++) {\n              const {type, payload} = items[index];\n              emitter.emit(type, payload);\n            }\n            ctx.status = 200;\n          } else {\n            ctx.status = 400;\n          }\n        }\n        // awaiting next before registering `then` on ctx.timing.end to try and get as much as possible\n        // into the event batch flush.\n        await next();\n        ctx.timing.end.then(() => {\n          emitter.flush();\n        });\n      };\n    },\n  });\n\nexport default ((plugin: any): FusionPlugin<DepsType, IEmitter>);\n","// @flow\n/* global window */\n\nconst storageKey = 'fusion-events';\n\ntype EventType = {|\n  type: mixed,\n  payload: mixed,\n|};\n\n// localStorage wrappers *exported only for testing*\nexport const get = () => {\n  try {\n    const events = JSON.parse(window.localStorage.getItem(storageKey));\n    return Array.isArray(events) ? events : [];\n  } catch (e) {\n    return [];\n  }\n};\n\nexport const clear = () => {\n  try {\n    window.localStorage.removeItem(storageKey);\n  } catch (e) {\n    // storage may not be writable, do nothing\n  }\n};\n\nexport const set = (events: EventType[]) => {\n  try {\n    window.localStorage.setItem(storageKey, JSON.stringify(events));\n  } catch (e) {\n    // storage might be full or not writable, do nothing\n  }\n};\n\n// public methods\nexport const getAndClear = () => {\n  const events = get();\n  clear();\n  return events;\n};\n\nexport const add = (...toBeAdded: EventType[]) => set(get().concat(toBeAdded));\n\nexport const addToStart = (...toBeAdded: EventType[]) =>\n  set(toBeAdded.concat(get()));\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/* eslint-env browser */\nimport {createPlugin} from 'fusion-core';\nimport type {FusionPlugin} from 'fusion-core';\nimport {FetchToken} from 'fusion-tokens';\nimport type {Fetch} from 'fusion-tokens';\nimport {add, addToStart, getAndClear} from './event-storage';\nimport Emitter from './emitter.js';\nimport type {\n  IEmitter,\n  UniversalEventsPluginDepsType as DepsType,\n} from './types.js';\n\nclass UniversalEmitter extends Emitter {\n  flush: any;\n  fetch: any;\n  interval: any;\n\n  constructor(fetch: Fetch): void {\n    super();\n    //privates\n    this.flush = this.flushInternal.bind(this);\n    this.fetch = fetch;\n    this.setFrequency(5000);\n    window.addEventListener('beforeunload', this.flush);\n  }\n  setFrequency(frequency: number): void {\n    window.clearInterval(this.interval);\n    this.interval = setInterval(this.flush, frequency);\n  }\n  emit(type: mixed, payload: mixed): void {\n    payload = super.mapEvent(type, payload);\n    super.handleEvent(type, payload);\n    add({type, payload});\n  }\n  // match server api\n  from(): UniversalEmitter {\n    return this;\n  }\n  async flushInternal(): Promise<void> {\n    const items = getAndClear();\n    if (items.length === 0) return;\n\n    try {\n      const res = await this.fetch('/_events', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({items}),\n      });\n\n      if (!res.ok) {\n        // sending failed so put the logs back into storage\n        addToStart(...items);\n      }\n    } catch (e) {\n      // sending failed so put the logs back into storage\n      addToStart(...items);\n    }\n  }\n  teardown(): void {\n    window.removeEventListener('beforeunload', this.flush);\n    clearInterval(this.interval);\n    this.interval = null;\n  }\n}\n\nconst plugin =\n  __BROWSER__ &&\n  createPlugin({\n    deps: {fetch: FetchToken},\n    provides: ({fetch}) => {\n      return new UniversalEmitter(fetch);\n    },\n    cleanup: async emitter => {\n      return emitter.teardown();\n    },\n  });\n\nexport default ((plugin: any): FusionPlugin<DepsType, IEmitter>);\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {createToken} from 'fusion-core';\nimport type {FusionPlugin, Token} from 'fusion-core';\n\nimport ServerEvents from './server.js';\nimport BrowserEvents from './browser.js';\nimport type {\n  IEmitter,\n  UniversalEventsPluginDepsType as DepsType,\n} from './types.js';\n\nconst UniversalEventsPlugin = __BROWSER__ ? BrowserEvents : ServerEvents;\n\n// eslint-disable-next-line prettier/prettier\nexport default ((UniversalEventsPlugin: any): FusionPlugin<DepsType, IEmitter>);\n\nexport const UniversalEventsToken: Token<IEmitter> = createToken(\n  'UniversalEventsToken'\n);\n"],"names":["globalEventType","UniversalEmitter","handlers","mappers","map","args","getArgs","type","callback","push","on","off","index","indexOf","splice","mapEvent","payload","ctx","globalMappers","concat","reduce","mapper","handleEvent","globalHandlers","forEach","handler","from","Error","emit","setFrequency","frequency","teardown","flush","validateHandler","TypeError","GlobalEmitter","memoize","ScopedEmitter","Emitter","parent","batch","flushed","handleBatchedEvent","length","storageKey","get","events","JSON","parse","window","localStorage","getItem","Array","isArray","e","clear","removeItem","set","setItem","stringify","getAndClear","add","toBeAdded","addToStart","fetch","flushInternal","bind","addEventListener","clearInterval","interval","setInterval","items","res","ok","removeEventListener","plugin","createPlugin","FetchToken","emitter","UniversalEventsPlugin","BrowserEvents","UniversalEventsToken","createToken"],"mappings":"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"}